(*
	Display affiche une simulation, potentiellement personnalisable en donnant
	des arguments.
*)

open Graphics
open Engine

let dump_file = ref ""

let draw_boid boid =
	let x,y = boid.pos in
		set_color boid.color;
		fill_circle (truncate x) (truncate y) 3

let n = 50

let uniform n a = Array.init n (fun _ -> Array.make n a)
	(** Array.make_matrix... *)
let rules = [
	Array.make n 0.01, Cohesion (uniform n 1., uniform n 0.2, uniform n 100.);
	Array.make n (-1.), Cohesion (uniform n 1., uniform n 1., uniform n 20.);
	Array.make n 0.1, Alignment (uniform n 1., uniform n 0.2, uniform n 100.);
	Array.make n 1., Inertia (Array.make n 0.85)
]
(* TODO : Procédures pratiques de construction de règle *)


let boids = Array.init n (fun i -> default_boid ())

let main arg =
	Random.self_init ();
	open_graph " 600x600";
	set_window_title "Boids";
	auto_synchronize false;
	while not (key_pressed () && read_key () = 'q') do
		clear_graph ();
		Array.iter draw_boid boids;
		Engine.step boids rules;
		synchronize ();
		ignore (Unix.system "sleep 0.02");
	done;
	close_graph ();
	exit(0)


let () = Arg.parse
	["--dump", Arg.Set_string dump_file,
	 "dump the data generated by the simulation in the given file."]
	main
	"Usage : display.\n\
	Display a multi-agent boids-based simulation.\n\
	The available options are :"
	;
	main ()





